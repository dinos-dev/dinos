diff --git a/node_modules/@react-native-seoul/naver-login/android/src/main/java/com/dooboolab/naverlogin/RNNaverLoginModule.kt b/node_modules/@react-native-seoul/naver-login/android/src/main/java/com/dooboolab/naverlogin/RNNaverLoginModule.kt
index 00ea78f..e0e807c 100644
--- a/node_modules/@react-native-seoul/naver-login/android/src/main/java/com/dooboolab/naverlogin/RNNaverLoginModule.kt
+++ b/node_modules/@react-native-seoul/naver-login/android/src/main/java/com/dooboolab/naverlogin/RNNaverLoginModule.kt
@@ -18,11 +18,12 @@ class RNNaverLoginModule(reactContext: ReactApplicationContext) : ReactContextBa
     override fun getName() = "RNNaverLogin"
 
     @ReactMethod
-    fun logout(promise: Promise) =
+    fun logout(promise: Promise) {
         UiThreadUtil.runOnUiThread {
             callLogout()
             promise.safeResolve(null)
         }
+    }
 
     private fun callLogout() =
         try {
@@ -36,17 +37,19 @@ class RNNaverLoginModule(reactContext: ReactApplicationContext) : ReactContextBa
         consumerKey: String,
         consumerSecret: String,
         appName: String,
-    ) = UiThreadUtil.runOnUiThread {
-        NaverIdLoginSDK.initialize(
-            reactApplicationContext,
-            clientId = consumerKey,
-            clientSecret = consumerSecret,
-            clientName = appName,
-        )
+    ) {
+        UiThreadUtil.runOnUiThread {
+            NaverIdLoginSDK.initialize(
+                reactApplicationContext,
+                clientId = consumerKey,
+                clientSecret = consumerSecret,
+                clientName = appName,
+            )
+        }
     } 
 
     @ReactMethod
-    fun login(promise: Promise) =
+    fun login(promise: Promise) {
         UiThreadUtil.runOnUiThread {
             loginPromise = promise
             if (currentActivity == null) {
@@ -80,25 +83,28 @@ class RNNaverLoginModule(reactContext: ReactApplicationContext) : ReactContextBa
                 onLoginFailure(je.localizedMessage)
             }
         }
+    }
 
     @ReactMethod
-    fun deleteToken(promise: Promise) =
-        UiThreadUtil.runOnUiThread {
-            NidOAuthLogin().callDeleteTokenApi(
-                object : OAuthLoginCallback {
-                    override fun onSuccess() = promise.safeResolve(null)
-
-                    override fun onFailure(
-                        httpStatus: Int,
-                        message: String,
-                    ) = promise.safeReject(message, message)
-
-                    override fun onError(
-                        errorCode: Int,
-                        message: String,
-                    ) = promise.safeReject(message, message)
-                },
-            )
+    fun deleteToken(promise: Promise)
+        {
+            UiThreadUtil.runOnUiThread {
+                NidOAuthLogin().callDeleteTokenApi(
+                    object : OAuthLoginCallback {
+                        override fun onSuccess() = promise.safeResolve(null)
+
+                        override fun onFailure(
+                            httpStatus: Int,
+                            message: String,
+                        ) = promise.safeReject(message, message)
+
+                        override fun onError(
+                            errorCode: Int,
+                            message: String,
+                        ) = promise.safeReject(message, message)
+                    },
+                )
+            }   
         }
 
     companion object {
@@ -158,3 +164,4 @@ class RNNaverLoginModule(reactContext: ReactApplicationContext) : ReactContextBa
             }
     }
 }
+
